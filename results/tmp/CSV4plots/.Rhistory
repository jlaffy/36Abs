initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
scaledtable = scale.range(x=short)
print(scaledtable)
}
short
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(short)
print(long)
table = weighted.freq(short,long)
print(table)
}
count(long)
source('~/36Abs/newscripts/scaled-resid-freq.R')
source('~/36Abs/newscripts/data2freqs.R')
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
shortlist = data[1] #or data$shortlist
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(short)
print(long)
table = weighted.freq(short,long)
print(table)
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
assign(x,short)
long = data[[2]][[i]][[2]]
assign(y,long)
}
x=0
y=0
for (i in 1:10){
short = data[[1]][[i]][[2]]
assign(x,short)
long = data[[2]][[i]][[2]]
assign(y,long)
}
short
nrow(long)
length(long)
1
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
table = weighted.freq(short,long)
print(table)
}
count(long)
count(short)
(as.data.frame(count(long)))
(as.data.frame(count(long))) -> prac
prac
prac[,2]/sum(long) -> prac[,3]
prac[,2]/length(long) -> prac[,3]
prac
prac = merge(prac, count(short), by=colnames(long[1]))
prac
colnames(y[1])
y[1]
y[[1]]
colnames(long[1])
colnames(long[[1]])
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
}
long
prac
prac <- prac[,1:3]
prac
prac = merge(prac, count(short), by=long)
long[[1]]
long[1]
long[[1]][[1]]
prac = merge(prac, count(short), by=prac[,1])
prac[,1]
prac
colnames(prac[1])
prac = merge(prac, count(short), by=colnames(prac[,1]))
prac
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
table = weighted.freq(short,long)
print(table)
}
weighted.freq <- function(x, y) {
weighted.freq <- function(x, y) {
seqlength = length(y)
weighted.freq <- function(x, y) {
seqlength = length(y)
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
table = weighted.freq(short,long)
print(table)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = count(y)
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
table = weighted.freq(short,long)
print(table)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = count(y)
countselect = count(x)
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
table = weighted.freq(short,long)
print(table)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = count(y)
countselect = count(x)
weightedcounts = as.data.frame(countwhole)
weightedcounts[,3] = weightedcounts[,2] / seqlength
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
print(short)
long = data[[2]][[i]][[2]]
print(long)
table = weighted.freq(short,long)
print(table)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = count(y)
countselect = count(x)
weightedcounts = as.data.frame(countwhole)
weightedcounts[,3] = weightedcounts[,2] / seqlength
weightedcounts = merge(weightedcounts, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
weightedcounts = merge(weightedcounts, countselect, by=colnames(weightedcounts[1]))
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = count(y)
countselect = count(x)
weightedcounts = as.data.frame(countwhole)
weightedcounts[,3] = weightedcounts[,2] / seqlength
weightedcounts = merge(weightedcounts, countselect, by=colnames(weightedcounts[,1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
countselect = count(x)
countselect
count(short)
k <- count(short)
k[,2]
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
weightedcounts[,3] = weightedcounts[,2] / seqlength
weightedcounts = merge(weightedcounts, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
source('~/36Abs/newscripts/data2freqs.R')
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
weightedcounts[,3] = weightedcounts[,2] / seqlength
weightedcounts = merge(weightedcounts, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
setwd(initial.dir)
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
weightedcounts[,3] = weightedcounts[,2] / seqlength
weightedcounts = merge(weightedcounts, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
weightedcounts = merge(weightedcounts, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
# scaledtable = scale.range(x=short)
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
print(table)
}
colnames(long[1])
col.names(lonh)
col.names(long)
long
short = data[[1]][[i]][[2]]
short
data
data[data[[1]][[10]][[2]]]
data = data[data[[1]][[10]][[2]]]
data
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
print(short)
}
countwhole = as.data.frame(count(y))
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
#!/usr/bin/Rscript
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
colnames(countwhole)[1] = "letters"
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by=colnames(y[1]))
}
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
seqlength
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
colnames(countwhole)[1] = "letters"
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by=colnames(y[1]))
}
countwhole
length(long)
as.data.frame(count(long))
as.data.frame(count(long)) = long
as.data.frame(count(x))
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
print(table)
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
print(table)
for (i in 1:10){
short = data[[1]][[i]][[2]]
long = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
length(long)
as.data.frame(count(long))
as.data.frame(count(long)) -> longdf
longdf
longdf[,"x"]
longdf["x"]
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
y
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by=colnames(y["x"]))
}
seqlength
seqlength = length(y)
seqlength
countwhole = as.data.frame(count(y))
countwhole
countselect = as.data.frame(count(x))
countselect
countwhole[,3] = countwhole[,2] / seqlength
countwhole
countwhole = merge(countwhole, countselect, by=colnames(y["x"]))
countwhole
countselect
countwhole = merge(countwhole, countselect, by="x")
countwhole = merge(countwhole, countselect, by.x="x")
countwhole = merge(countwhole, countselect, by.x="x")
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by.x="x")
}
countwhole = merge(countwhole, countselect, by.x="x")
countwhole = merge(countwhole, countselect, by.x = "x", by.y = "x")
countwhole = merge(countwhole, countselect, by.y = "x")
weightedcounts = merge(weightedcounts, countselect, by=colnames(y$x))   # ii) only rows of y where amino acids in x exist also
countwhole["x"]
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
setwd(initial.dir)
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
print(table)
countwhole = merge(countwhole, countselect, by.x = "x")
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by.x = "x")
}
for (i in 1:10){
length(y)
a = as.data.frame(count(y))
a
a[,1]
colnames(a[1])
countselect = as.data.frame(count(x))
countselect
countwhole[,3] = countwhole[,2] / seqlength
a=countwhole
countwhole = a
countwhole
countwhole[,3] = countwhole[,2] / seqlength
countwhole[,3] = countwhole[,2] / length(y)
countwhole
countwhole = merge(countwhole, countselect, by=colnames(y[1]))
countwhole
countwhole = merge(countwhole, countselect)
countwhole
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
source('~/36Abs/newscripts/scaled-resid-freq.R')
rm(list=ls(all=TRUE)) #start with empty workspace
data = load.data() #function in R script loaded above
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
setwd(initial.dir)
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
a
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
source('~/36Abs/newscripts/data2freqs.R')
source('~/36Abs/newscripts/scaled-resid-freq.R')
