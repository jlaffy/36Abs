table = weighted.freq(short,long)
}
y
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by=colnames(y["x"]))
}
seqlength
seqlength = length(y)
seqlength
countwhole = as.data.frame(count(y))
countwhole
countselect = as.data.frame(count(x))
countselect
countwhole[,3] = countwhole[,2] / seqlength
countwhole
countwhole = merge(countwhole, countselect, by=colnames(y["x"]))
countwhole
countselect
countwhole = merge(countwhole, countselect, by="x")
countwhole = merge(countwhole, countselect, by.x="x")
countwhole = merge(countwhole, countselect, by.x="x")
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by.x="x")
}
countwhole = merge(countwhole, countselect, by.x="x")
countwhole = merge(countwhole, countselect, by.x = "x", by.y = "x")
countwhole = merge(countwhole, countselect, by.y = "x")
weightedcounts = merge(weightedcounts, countselect, by=colnames(y$x))   # ii) only rows of y where amino acids in x exist also
countwhole["x"]
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(short,long)
}
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
setwd(initial.dir)
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
print(table)
countwhole = merge(countwhole, countselect, by.x = "x")
weighted.freq <- function(x, y) {
seqlength = length(y)
countwhole = as.data.frame(count(y))
countselect = as.data.frame(count(x))
countwhole[,3] = countwhole[,2] / seqlength
countwhole = merge(countwhole, countselect, by.x = "x")
}
for (i in 1:10){
length(y)
a = as.data.frame(count(y))
a
a[,1]
colnames(a[1])
countselect = as.data.frame(count(x))
countselect
countwhole[,3] = countwhole[,2] / seqlength
a=countwhole
countwhole = a
countwhole
countwhole[,3] = countwhole[,2] / seqlength
countwhole[,3] = countwhole[,2] / length(y)
countwhole
countwhole = merge(countwhole, countselect, by=colnames(y[1]))
countwhole
countwhole = merge(countwhole, countselect)
countwhole
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
source('~/36Abs/newscripts/scaled-resid-freq.R')
rm(list=ls(all=TRUE)) #start with empty workspace
data = load.data() #function in R script loaded above
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
setwd(initial.dir)
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
a
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
data = load.data() #function in R script loaded above
for (i in 1:10){
x = data[[1]][[i]][[2]]
y = data[[2]][[i]][[2]]
table = weighted.freq(x,y)
}
source('~/36Abs/newscripts/data2freqs.R')
source('~/36Abs/newscripts/scaled-resid-freq.R')
df = cbind(small,big)
preh149MU7_IMML103 <- read.csv("~/36Abs/results/tmp/big_IMML103_heavy/preh149MU7_Prob_Heavy_IMML103_big.csv")
preh149MU7_NAIL120 <- read.csv("~/36Abs/results/tmp/big_NAIL120_heavy/preh149MU7_Prob_Heavy_NAIL120_big.csv")
preh149MU7_NAIL107 <- read.csv("~/36Abs/results/tmp/big_NAIL107_heavy/preh149MU7_Prob_Heavy_NAIL107_big.csv")
preh149MU7_IMML103small <- read.csv("~/36Abs/results/tmp/small_IMML103_heavy/preh149MU7_Prob_Heavy_IMML103_small.csv")
preh149MU7_NAIL120small <- read.csv("~/36Abs/results/tmp/small_NAIL120_heavy/preh149MU7_Prob_Heavy_NAIL120_small.csv")
preh149MU7_NAIL107small <- read.csv("~/36Abs/results/tmp/small_NAIL107_heavy/preh149MU7_Prob_Heavy_NAIL107_small.csv")
#select rows from data.frame
IMML103 <- preh149MU7_IMML103[2,]
NAIL120 <- preh149MU7_NAIL120[2,]
NAIL107 <- preh149MU7_NAIL107[2,]
IMML103small <- preh149MU7_IMML103small[2,]
NAIL120small <- preh149MU7_NAIL120small[2,]
NAIL107small <- preh149MU7_NAIL107small[2,]
#exclude first element
IMML103 <- c(t(IMML103[-1]))
NAIL120 <- c(t(NAIL120[-1]))
NAIL107 <- c(t(NAIL107[-1]))
IMML103small <- c(t(IMML103small[-1]))
a.a.seq <- preh149MU7_IMML103small[1,]
a.a.seq <- c(t(a.a.seq[-1]))
a.a.seq = data.frame(a.a.seq)
a = table(a.a.seq)
big <- data.frame(NAIL120, IMML103, NAIL107)
colnames(big) = c("NAIL120big", "IMML103big", "NAIL107big")
small <- data.frame(a.a.seq, NAIL120small, IMML103small, NAIL107small)
colnames(small)[1] = "preh149MU7"
big <- data.frame(NAIL120, IMML103, NAIL107)
colnames(big) = c("NAIL120big", "IMML103big", "NAIL107big")
small <- data.frame(a.a.seq, NAIL120small, IMML103small, NAIL107small)
a = table(a.a.seq)
big <- data.frame(NAIL120, IMML103, NAIL107)
colnames(big) = c("NAIL120big", "IMML103big", "NAIL107big")
small <- data.frame(a.a.seq, NAIL120small, IMML103small, NAIL107small)
preh149MU7_IMML103 <- read.csv("~/36Abs/results/tmp/big_IMML103_heavy/preh149MU7_Prob_Heavy_IMML103_big.csv")
preh149MU7_NAIL120 <- read.csv("~/36Abs/results/tmp/big_NAIL120_heavy/preh149MU7_Prob_Heavy_NAIL120_big.csv")
preh149MU7_NAIL107 <- read.csv("~/36Abs/results/tmp/big_NAIL107_heavy/preh149MU7_Prob_Heavy_NAIL107_big.csv")
preh149MU7_IMML103small <- read.csv("~/36Abs/results/tmp/small_IMML103_heavy/preh149MU7_Prob_Heavy_IMML103_small.csv")
preh149MU7_NAIL120small <- read.csv("~/36Abs/results/tmp/small_NAIL120_heavy/preh149MU7_Prob_Heavy_NAIL120_small.csv")
preh149MU7_NAIL107small <- read.csv("~/36Abs/results/tmp/small_NAIL107_heavy/preh149MU7_Prob_Heavy_NAIL107_small.csv")
#select rows from data.frame
IMML103 <- preh149MU7_IMML103[2,]
NAIL120 <- preh149MU7_NAIL120[2,]
NAIL107 <- preh149MU7_NAIL107[2,]
IMML103small <- preh149MU7_IMML103small[2,]
NAIL120small <- preh149MU7_NAIL120small[2,]
NAIL107small <- preh149MU7_NAIL107small[2,]
#exclude first element
IMML103 <- c(t(IMML103[-1]))
NAIL120 <- c(t(NAIL120[-1]))
NAIL107 <- c(t(NAIL107[-1]))
IMML103small <- c(t(IMML103small[-1]))
a.a.seq <- preh149MU7_IMML103small[1,]
a.a.seq <- c(t(a.a.seq[-1]))
a.a.seq = data.frame(a.a.seq)
a = table(a.a.seq)
big <- data.frame(NAIL120, IMML103, NAIL107)
colnames(big) = c("NAIL120big", "IMML103big", "NAIL107big")
small <- data.frame(a.a.seq, NAIL120small, IMML103small, NAIL107small)
small
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
for (i in 1:10){
out = data.frame()
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
print(countwhole)
rbind(out,countwhole)
}
out
out = rbind(out,countwhole)
for (i in 1:10){
out = data.frame()
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
print(countwhole)
out = rbind(out,countwhole)
}
out
for (i in 1:10){
out = data.frame()
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
print(countwhole)
out = rbind(out,countwhole)
}
out
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
#table.freq <- function(x,y){
for (i in 1:10){
out = data.frame()
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
out = rbind(out,countwhole)
}
out
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
out = rbind(out,countwhole)
print(countwhole)
}
class(countwhole)
class(out)
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
out = cbind(out,countwhole)
print(countwhole)
}
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
out = rbind(out,countwhole)
print(countwhole)
}
out
m(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
out = smartbind(out,countwhole)
print(countwhole)
}
install.packages("smartbind")
install.packages(gtools)
data.frame(rbind(as.matrix(out),as.matrix(countwhole)))
m(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
out = smartbind(out,countwhole)
data.frame(rbindlist(list(out,countwhole)))
print(countwhole)
}
#}
#!/usr/bin/Rscript
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
#out = smartbind(out,countwhole)
data.frame(rbindlist(list(out,countwhole)))
print(countwhole)
}
install.packages(rbind)
install.packages("rbind")
df = data.frame()
df[1]
df = data.frame()
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
#out = smartbind(out,countwhole)
#data.frame(rbindlist(list(out,countwhole)))
print(countwhole)
df[(i,] = rbind(df, countwhole)
}
df = data.frame()
#out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
#out = smartbind(out,countwhole)
#data.frame(rbindlist(list(out,countwhole)))
df[i,] = rbind(df, countwhole)
}
warnings()
getwd
getwd()
#!/usr/bin/Rscript
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
scale.range <- function(x, a=0, b=9) {
((((b-a)*( x - (min(x))))/((max(x)) - (min(x)))) + a)
}
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
#df = data.frame()
#out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
selectcounts = countwhole["wfreqSelect"]
newscale = as.data.frame(lapply(selectcounts, scale.range))
finaltable = cbind(countwhole, newscale, round(newscale))
colnames(finaltable)[6:7]=c("range0-9", "rounded")
print(finaltable)
#out = smartbind(out,countwhole)
#data.frame(rbindlist(list(out,countwhole)))
}
source('~/36Abs/newscripts/data2freqs.R')
#!/usr/bin/Rscript
rm(list=ls(all=TRUE)) #start with empty workspace
initial.dir = getwd()
setwd("~/36Abs/newscripts")
source("scaled-resid-freq.R") #R script containing necessary functions, eg. loading data
scale.range <- function(x, a=0, b=9) {
((((b-a)*( x - (min(x))))/((max(x)) - (min(x)))) + a)
}
shortdata = load.data.short() #function in R script loaded above
longdata = load.data.long()
#df = data.frame()
out = data.frame()
#table.freq <- function(x,y){
for (i in 1:10){
x = shortdata[[i]][1:2]
y = longdata[[i]][1:2]
countwhole= count(y[,2])
countselect = count(x[,2])
seqlen = nrow(y)
countwhole[,3] = countwhole[,2] / seqlen
countwhole = merge(countwhole, countselect, by=colnames(countwhole[1]))
countwhole[,5] = countwhole[,3] * countwhole[,4]
colnames(countwhole)[1:5] = c(colnames(y[2]), "freqWhole", "wfreqWhole", "freqSelect", "wfreqSelect")
selectcounts = countwhole["wfreqSelect"]
newscale = as.data.frame(lapply(selectcounts, scale.range))
finaltable = cbind(countwhole, newscale, round(newscale))
colnames(finaltable)[6:7]=c("range0-9", "rounded")
length(out) = length(finaltable)
cbind(out,finaltable)
print(finaltable)
#out = smartbind(out,countwhole)
#data.frame(rbindlist(list(out,countwhole)))
}
out
source('~/36Abs/newscripts/data2freqs.R')
source('~/36Abs/newscripts/data2freqs.R')
source('~/36Abs/newscripts/generalCSV4plots.R')
